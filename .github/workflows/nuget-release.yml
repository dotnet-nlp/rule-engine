name: Release NuGet packages on version tag created

on:
  create:
    tags:
      - v*

jobs:
  release-nuget-packages:
    name: Release NuGet packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Verify commit exists in origin/main
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git branch --remote --contains | grep origin/main
      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - name: Set MSBUILD_PROPERTIES variable
          run: echo "MSBUILD_PROPERTIES=/p:Version=${VERSION} /p:RepositoryUrl=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} /p:PublishRepositoryUrl=true" >> $GITHUB_ENV
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build /p:Version=${VERSION} ${MSBUILD_PROPERTIES} --configuration Release --no-restore
      - name: Test
        run: dotnet test /p:Version=${VERSION} ${MSBUILD_PROPERTIES} --configuration Release --no-restore --no-build --verbosity normal
      - name: Pack
        run: dotnet pack /p:Version=${VERSION} ${MSBUILD_PROPERTIES} --configuration Release --no-restore --no-build --include-source --include-symbols --output . 
      - name: Push
        run: |
          dotnet nuget push RuleEngine.Core.${VERSION}.nupkg --source ${SERVER_URL} --api-key ${GITHUB_TOKEN}
          dotnet nuget push RuleEngine.Mechanics.Peg.${VERSION}.nupkg --source ${SERVER_URL} --api-key ${GITHUB_TOKEN}
          dotnet nuget push RuleEngine.Mechanics.Regex.${VERSION}.nupkg --source ${SERVER_URL} --api-key ${GITHUB_TOKEN}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SERVER_URL: https://nuget.pkg.github.com/${{ env.GITHUB_REPOSITORY_OWNER }}/index.json
