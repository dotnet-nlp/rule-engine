name: Pre-Release NuGet packages from main branch

on: workflow_dispatch

jobs:
  get-next-version:
    name: Draft new Pre-Release version
    runs-on: ubuntu-latest
    outputs:
      major: ${{ steps.semvers.outputs.major }}
      minor: ${{ steps.semvers.outputs.minor }}
      patch: ${{ steps.semvers.outputs.patch }}
      preview: ${{ steps.semvers.outputs.patch }}-preview.${{ steps.current-timestamp.outputs.timestamp }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get last tag on the branch
        id: last-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: 1.0.0
      - name: Get semantic versioning information
        id: semvers
        uses: WyriHaximus/github-action-next-semvers@v1
        with:
          version: ${{ steps.last-tag.outputs.tag }}
      - name: Get current timestamp
        id: current-timestamp
        run: echo "::set-output name=timestamp::$(date +%s)"

  release-nuget-packages:
    name: Pre-Release NuGet packages
    runs-on: ubuntu-latest
    needs: [get-next-version]
    steps:
      - uses: actions/checkout@v3
      - name: Set VERSION variable
        run: echo "VERSION=${{ needs.get-next-version.outputs.preview }}" >> $GITHUB_ENV
      - name: Set MSBUILD_PROPERTIES variable
        run: echo "MSBUILD_PROPERTIES=/p:Version=${VERSION} /p:RepositoryUrl=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} /p:PublishRepositoryUrl=true" >> $GITHUB_ENV
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build ${MSBUILD_PROPERTIES} --configuration Release --no-restore
      - name: Test
        run: dotnet test ${MSBUILD_PROPERTIES} --configuration Release --no-restore --no-build --verbosity normal
      - name: Pack
        run: dotnet pack ${MSBUILD_PROPERTIES} --configuration Release --no-restore --no-build --include-source --include-symbols --output . 
      - name: Push
        run: |
          dotnet nuget push DotnetNlp.RuleEngine.Core.${VERSION}.nupkg --source ${SERVER_URL} --api-key ${GITHUB_TOKEN}
          dotnet nuget push DotnetNlp.RuleEngine.Mechanics.Peg.${VERSION}.nupkg --source ${SERVER_URL} --api-key ${GITHUB_TOKEN}
          dotnet nuget push DotnetNlp.RuleEngine.Mechanics.Regex.${VERSION}.nupkg --source ${SERVER_URL} --api-key ${GITHUB_TOKEN}
          dotnet nuget push DotnetNlp.RuleEngine.Bundle.${VERSION}.nupkg --source ${SERVER_URL} --api-key ${GITHUB_TOKEN}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SERVER_URL: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

